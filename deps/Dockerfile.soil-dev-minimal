FROM oilshell/soil-debian-12

# Copy again to prevent unsound caching
COPY deps/from-apt.sh /home/uke/tmp/deps/from-apt.sh

RUN --mount=type=cache,id=var-cache-apt-debian-12,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,id=var-lib-apt-debian-12,target=/var/lib/apt,sharing=locked \
    du --si -s /var/cache/apt /var/lib/apt && \
    deps/from-apt.sh dev-minimal

USER uke

COPY --chown=uke \
  _build/boxed/wedge/python3/3.10.4 \
  /home/uke/oils.DEPS/wedge/python3/3.10.4

# Put python3 in PATH before running install-py3-libs
RUN mkdir -p /home/uke/oils.DEPS/bin && \
    ln -s --relative /home/uke/oils.DEPS/wedge/python3/3.10.4/bin/python3 /home/uke/oils.DEPS/bin

COPY --chown=uke \
  _build/boxed/wedge/pyflakes/2.4.0 \
  /home/uke/oils.DEPS/wedge/pyflakes/2.4.0

# So we can run python3 -m mypy.  (Not just for mycpp)
COPY --chown=uke \
  _build/deps-source/mypy/mypy-0.780/ \
  /home/uke/oils.DEPS/wedge/mypy/0.780/

# 2025-04: build/deps.sh install-py3-libs depends on this - need tree shaking
COPY stdlib/osh/bash-strict.sh /home/uke/tmp/stdlib/osh/bash-strict.sh
COPY stdlib/osh/task-five.sh /home/uke/tmp/stdlib/osh/task-five.sh
COPY stdlib/osh/byo-server.sh /home/uke/tmp/stdlib/osh/byo-server.sh
COPY stdlib/osh/two.sh /home/uke/tmp/stdlib/osh/two.sh
COPY test/tsv-lib.sh /home/uke/tmp/test/tsv-lib.sh
COPY web/table/html.sh /home/uke/tmp/web/table/html.sh

COPY build/deps.sh /home/uke/tmp/build/deps.sh
COPY build/dev-shell.sh /home/uke/tmp/build/dev-shell.sh

# Hack for now: pass a different MyPy dir
# Ideally py3-libs would be created a BUILD TIME with wedge-builder, not at
# RUNTIME with uke!
#RUN build/deps.sh install-py3-libs /home/uke/wedge/oils-for-unix.org/pkg/mypy/0.780/
RUN build/deps.sh install-py3-libs \
  /home/uke/oils.DEPS/wedge/mypy/0.780/ ../oils.DEPS/wedge

CMD ["sh", "-c", "echo 'hello from oilshell/soil-dev-minimal'"]
