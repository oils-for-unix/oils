from typing import List, Optional, Tuple

# generated by ./configure
HAVE_GLOB_PERIOD: int
HAVE_FNM_EXTMATCH: int

# libc values
FNM_CASEFOLD: int
GLOB_PERIOD: int
REG_ICASE: int
REG_NEWLINE: int
REG_NOTBOL: int

def gethostname() -> str: ...
def glob(pat: str, flags: int = 0) -> List[str]: ...
def fnmatch(pat: str, s: str, flags: int = 0) -> bool: ...
def regex_first_group_match(regex: str, s: str, pos: int) -> Optional[Tuple[int, int]]: ...
def regex_search(regex: str, cflags: int, s: str, eflags: int, pos: int = 0) -> Optional[List[int]]: ...
def wcswidth(s: str) -> int: ...
def get_terminal_width() -> int: ...
def print_time(real: float, user: float, sys: float) -> None: ...
def realpath(path: str) -> str: ...

def cpython_reset_locale() -> None: ...
