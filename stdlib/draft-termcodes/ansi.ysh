#!/usr/bin/env ysh

module stdlib/termcodes || return 0

# Reference: https://en.wikipedia.org/wiki/ANSI_escape_code#C0_control_codes
# NOTE: some non-standard constucts are included given they are the de facto standard

const TERM_BEL = u'\u{07}'
const TERM_BS  = u'\u{08}'
const TERM_HT  = u'\u{09}'
const TERM_LF  = u'\u{0A}'
const TERM_FF  = u'\u{0C}'
const TERM_CR  = u'\u{0D}'
const TERM_ESC = u'\u{1B}'

func srgRgb(r, g, b) {
  var channelName = ['Red', 'Green', 'Blue']
  for channel in $r $g $b {
    if (channel < 0 or channel > 255) {
      echo Channel $channelName has value $channel which is out of range of [0, 255].
      exit 1
    }
  }
  return ("2;$r;$g;$b")
}

# 0 ~ 7: Black, Red, Green, Yellow, Blue, Magenta, Cyan, White, 
# 8 ~ 15: Bright Black (Gray), Bright Red, Bright Green, Bright Yellow, Bright Blue, Bright Magenta, Bright Cyan, Bright White
func sgr4(color_id) {
  if (color_id > 0xF or color_id < 0) {
    echo Color $color_id is out of range of 4-bit colors
    exit 1
  }
  return ([color_id])
}

func sgr8(color_id) {
  if (color_id > 0xFF or color_id < 0) {
    echo Color $color_id is out of range of 8-bit colors
    exit 1
  }
  return ("5;$color_id")
}

func sgr24(color_hex) {
  if (color_hex > 0xFFFFFF or color_hex < 0) {
    echo Color $colorHex is out of range of 24-bit true colors
    exit 1
  }
  var r = (color_hex >> 16)
  var g = (color_hex >> 8) & 0xFF
  var b = color_hex & 0xFF
  return ("2;$r;$g;$b")
}

func withFg(color, text) {
  if (type(color) === 'Str') {
    return ("$TERM_ESC[38;${color}m${text}$TERM_ESC[m")
  } else { # 4-bit color
    var sgr4_id = color[0]
    if (sgr4_id < 8) {
      setvar sgr4_id += 30
    } else {
      setvar sgr4_id += 90 - 8
    }
    return ("$TERM_ESC[${sgr4_id}m${text}$TERM_ESC[m")
  }
}

func withBg(color, text) {
  if (type(color) === 'Str') {
    return ("$TERM_ESC[48;${color}m${text}$TERM_ESC[m")
  } else { # 4-bit color
    var sgr4_id = color[0]
    if (sgr4_id < 8) {
      setvar sgr4_id += 40
    } else {
      setvar sgr4_id += 100 - 8
    }
    return ("$TERM_ESC[;${sgr4_id}m${text}$TERM_ESC[m")
  }
}

func withLink(address, caption) {
  return ("$TERM_ESC]8;;$address$TERM_ESC\\$caption$TERM_ESC]8;;$TERM_ESC\\")
}

proc bell() {
  echo $TERM_BEL
}
