# oils-ref.mk: Build rules for oils-ref.ovm.

# C module dependencies
-include _build/oils-ref/ovm.d

_build/oils-ref/main_name.c:
	$(ACTIONS_SH) main-name bin.oil oils-ref.ovm > $@

OIL_PYPATH := $(REPO_ROOT):$(REPO_ROOT)/vendor

# Dependencies calculated by importing main.
# NOTE: The list of files is used both to compile and to make a tarball.
# - For compiling, we should respect _HAVE_READLINE in detected_config
# - For the tarball, we should ALWAYS include readline.
#
# BUG: Running 'make' the first time files because it can't find the '_build'
# package.  build/doc.sh currently makes _build/__init__.py.
_build/oils-ref/app-deps-%.txt: _build/detected-config.sh build/dynamic_deps.py
	test -d _build/oils-ref && \
	  $(ACTIONS_SH) app-deps oils-ref $(OIL_PYPATH) bin.oil

_build/oils-ref/py-to-compile.txt: _build/detected-config.sh build/dynamic_deps.py
	test -d _build/oils-ref && \
		$(ACTIONS_SH) py-to-compile $(OIL_PYPATH) bin.oil > $@

# NOTE: I should really depend on every file in build/ref/oils-manifest.txt!
OIL_BYTECODE_DEPS := \
	_build/release-date.txt \
	build/ref/oils-manifest.txt \
	_devbuild/gen/help_meta.py

# NOTES:
# - _devbuild/gen/osh_help.py is a minor hack to depend on the entire
#   _devbuild/osh-quick-ref dir, since they both get generated by the same
#   build action.  (Hidden targets are known to cause problems with GNU Make.)
# - release-date.txt is in different location on purpose, so we don't show it
#   in dev mode.
# - Do we need $(OIL_SRCS) as dependencies?

_build/oils-ref/bytecode-cpython-manifest.txt: $(OIL_BYTECODE_DEPS) \
                         _build/oils-ref/app-deps-cpython.txt
	{ echo '_build/release-date.txt release-date.txt'; \
	  cat build/ref/oils-manifest.txt \
	      _build/oils-ref/app-deps-cpython.txt \
	  $(ACTIONS_SH) help-manifest _devbuild/help; \
	  $(ACTIONS_SH) pyc-version-manifest $@; \
	} > $@

_build/oils-ref/bytecode-opy-manifest.txt: $(OIL_BYTECODE_DEPS) \
                         _build/oils-ref/opy-app-deps.txt
	{ echo '_build/release-date.txt release-date.txt'; \
	  cat build/ref/oils-manifest.txt \
	      _build/oils-ref/opy-app-deps.txt; \
	  $(ACTIONS_SH) help-manifest _devbuild/help; \
	  $(ACTIONS_SH) ysh-stdlib-manifest; \
	  $(ACTIONS_SH) pyc-version-manifest $@; \
	} > $@

_build/oils-ref/bytecode-%.zip: _build/oils-ref/bytecode-%-manifest.txt
	build/make_zip.py $@ < $^

